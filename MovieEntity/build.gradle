plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.0'
	id 'io.spring.dependency-management' version '1.1.5'
	id 'com.google.protobuf' version '0.9.4'
}

group = 'ubb.movierentals'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-amqp'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.amqp:spring-rabbit-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// docker-compose
	developmentOnly 'org.springframework.boot:spring-boot-docker-compose'

	// protobuf
	implementation 'io.github.lognet:grpc-spring-boot-starter:5.1.5'
	implementation 'com.google.protobuf:protobuf-java:3.25.3'
	implementation 'io.grpc:grpc-netty-shaded:1.62.2'
	implementation 'io.grpc:grpc-protobuf:1.62.2'
	implementation 'io.grpc:grpc-stub:1.62.2'
	implementation 'io.grpc:grpc-core:1.62.2'

	runtimeOnly 'io.grpc:grpc-services:1.62.2'
	implementation 'com.google.protobuf:protobuf-java-util:3.25.3'
	implementation 'io.grpc:grpc-inprocess:1.62.2'
	testImplementation 'io.grpc:grpc-testing:1.62.2'

	// to solve the Generated class dependency in the java file generated from proto
	implementation 'javax.annotation:javax.annotation-api:1.3.2'

}

// proto -> java stub class
protobuf {
	protoc {
		artifact = "com.google.protobuf:protoc:3.25.3"
	}
	plugins {
		grpc {
			artifact = "io.grpc:protoc-gen-grpc-java:1.62.2"
		}
	}
	generateProtoTasks {
		all()*.plugins {
			grpc {}
		}
	}
}

// Inform IDEs like IntelliJ IDEA, Eclipse or NetBeans about the generated code.
sourceSets {
	main {
		java {
			srcDirs 'build/generated/source/proto/main/grpc'
			srcDirs 'build/generated/source/proto/main/java'
		}
	}
}

// create a jar for the proto generated classes to include it into the client app (RentalEntity)
jar {
	manifest {
		attributes(
				'Implementation-Title': 'Movie Rental gRPC',
				'Implementation-Version': '1.0.0'
		)
	}
	from sourceSets.main.output
}

//task copyDependencies(type: Copy) {
//	into "$buildDir/libs"
//	from configurations.runtimeClasspath
//}

//build.dependsOn copyDependencies

tasks.named('test') {
	useJUnitPlatform()
}

